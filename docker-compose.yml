services:
  api:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: sello-ai-backend
    restart: unless-stopped
    # Keep API internal; nginx will talk to it via Docker network
    expose:
      - "8000"
    env_file:
      - ./.env
    environment:
      # Used by CORS in FastAPI
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN:-http://localhost}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/docs"]
      interval: 15s
      timeout: 3s
      retries: 10

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
      args:
        # Same-origin paths so browser always calls nginx
        - VITE_API_BASE_URL=/api
        - VITE_WS_BASE_URL=/events
    container_name: sello-frontend
    restart: unless-stopped
    # Frontend listens on 80 inside its container (see front/Dockerfile below)
    expose:
      - "80"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 10

  nginx:
    build: ./nginx
    container_name: sello-ai-nginx
    restart: unless-stopped
    ports:
      - "5173:80"   # single public entrypoint
    depends_on:
      - frontend
      - api

  redis:
    image: redis:7-alpine
    container_name: sello-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
