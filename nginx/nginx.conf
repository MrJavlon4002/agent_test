events {}

http {
  # Normalize Connection header for WebSocket upgrades
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream frontend_upstream {
    server frontend:80;
  }

  upstream api_upstream {
    server api:8080;
  }

  server {
    listen 80;

    # ---- Frontend SPA ----
    location / {
      proxy_pass http://frontend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---- REST API (mounted at /api) ----
    # Keep the /api prefix intact by NOT adding a URI to proxy_pass.
    location /api/ {
      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---- RAG service (mounted at /rag) ----
    # Same idea: preserve the /rag prefix.
    location /rag/ {
      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ---- WebSocket endpoint ----
    # Browser connects to /events; upstream must hit /api/events.
    location = /events {
      # Rewrite once, then pass through without a URI on proxy_pass
      rewrite ^/events$ /api/events break;

      proxy_pass http://api_upstream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
    }

    # Optional: normalize accidental trailing slash
    location = /events/ {
      return 301 /events;
    }
  }
}
